def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId 'org.fm_elpac.a_pinyin.ui'

        // 最小支持的系统版本: Android 8.1 (API 27)
        //minSdkVersion flutter.minSdkVersion
        minSdkVersion 27

        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // 注意: 不能使用 ndk.abiFilters 会冲突编译失败 !
        // ndk {
        //     abiFilters 'arm64-v8a', 'armeabi-v7a'
        // }
    }

    // 分开编译 apk, 且仅编译 arm64, arm32
    splits {
        abi {
            enable true
            reset()
            //include 'arm64-v8a', 'armeabi-v7a'
            include 'arm64-v8a'

            // 注意: universalApk 必须为 true, 若为 false 则 flutter run 失败 !
            universalApk true
        }
    }

    buildTypes {
        debug {
            // 调试版应用包名后缀
            applicationIdSuffix '.dev'
        }

        release {
            // 注意: 此处使用 debug key 签名应用 apk, 仅供测试.
            // 自己使用时, 建议用自己的私钥重新签名编译.
            //
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
